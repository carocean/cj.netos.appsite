2019年10月09日 01:44:08  信息 : -------------网关启动完毕-------------------
2019年10月09日 01:44:08  信息: cj.studio.gateway.tools.GatewayEntrypoint - 网关成功启动
2019年10月09日 01:45:19  错误: cj.studio.gateway.server.handler.HttpChannelHandler - 404 缺少路由目标，请求侦被丢掉：/
2019年10月09日 01:45:38  信息 : 已装载共享库/Users/cj/studio/cj.netos.gbera/cmdtools/gateway/lib/share
2019年10月09日 01:46:08  错误: cj.studio.ecm.container.factory.SingleonServiceInstanceFactory - 服务:dbutils构建失败，原因：com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]
2019年10月09日 01:46:08  错误: cj.studio.gateway.server.handler.HttpChannelHandler -  异常：cj.studio.ecm.EcmException: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused (Connection refused)}}]
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:78)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:496)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:468)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:209)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:105)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.channel.ChannelHandlerAdapter.channelRead(ChannelHandlerAdapter.java:143)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:243)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:956)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:514)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:471)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:385)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:351)
		at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:116)
		at io.netty.util.internal.chmv8.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1412)
		at io.netty.util.internal.chmv8.ForkJoinTask.doExec(ForkJoinTask.java:280)
		at io.netty.util.internal.chmv8.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:877)
		at io.netty.util.internal.chmv8.ForkJoinPool.scan(ForkJoinPool.java:1706)
		at io.netty.util.internal.chmv8.ForkJoinPool.runWorker(ForkJoinPool.java:1661)
		at io.netty.util.internal.chmv8.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:126)
	Cause by:
		at com.mongodb.connection.BaseCluster.createTimeoutException(BaseCluster.java:369)
		at com.mongodb.connection.BaseCluster.selectServer(BaseCluster.java:101)
		at com.mongodb.binding.ClusterBinding$ClusterBindingConnectionSource.<init>(ClusterBinding.java:75)
		at com.mongodb.binding.ClusterBinding$ClusterBindingConnectionSource.<init>(ClusterBinding.java:71)
		at com.mongodb.binding.ClusterBinding.getReadConnectionSource(ClusterBinding.java:63)
		at com.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:201)
		at com.mongodb.operation.CountOperation.execute(CountOperation.java:206)
		at com.mongodb.operation.CountOperation.execute(CountOperation.java:53)
		at com.mongodb.Mongo.execute(Mongo.java:773)
		at com.mongodb.Mongo$2.execute(Mongo.java:760)
		at com.mongodb.MongoCollectionImpl.count(MongoCollectionImpl.java:185)
		at com.mongodb.MongoCollectionImpl.count(MongoCollectionImpl.java:170)
		at cj.lns.chip.sos.disk.NameContainer.existsDiskName(NameContainer.java:96)
		at cj.lns.chip.sos.disk.NetDisk.existsDisk(NetDisk.java:128)
		at cj.lns.chip.sos.disk.NetDisk.trustOpen(NetDisk.java:90)
		at cj.studio.orm.mongodb.MongoDBPlugin.getService(MongoDBPlugin.java:54)
		at cj.studio.ecm.Assembly$EntryPoint.getService(Assembly.java:556)
		at cj.studio.ecm.Assembly$ProviderLinker.getService(Assembly.java:460)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:98)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:72)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:496)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:468)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:209)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:105)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.channel.ChannelHandlerAdapter.channelRead(ChannelHandlerAdapter.java:143)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:243)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:956)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:514)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:471)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:385)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:351)
		at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:116)
		at io.netty.util.internal.chmv8.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1412)
		at io.netty.util.internal.chmv8.ForkJoinTask.doExec(ForkJoinTask.java:280)
		at io.netty.util.internal.chmv8.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:877)
		at io.netty.util.internal.chmv8.ForkJoinPool.scan(ForkJoinPool.java:1706)
		at io.netty.util.internal.chmv8.ForkJoinPool.runWorker(ForkJoinPool.java:1661)
		at io.netty.util.internal.chmv8.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:126)
2019年10月09日 01:52:55  信息 : -------------网关启动完毕-------------------
2019年10月09日 01:52:55  信息: cj.studio.gateway.tools.GatewayEntrypoint - 网关成功启动
2019年10月09日 01:52:59  信息 : 已装载共享库/Users/cj/studio/cj.netos.gbera/cmdtools/gateway/lib/share
2019年10月09日 01:52:59  错误: cj.studio.gateway.server.handler.HttpChannelHandler -  异常：java.lang.RuntimeException: java.lang.NullPointerException
		at cj.studio.ecm.Assembly$EntryPoint.load(Assembly.java:586)
		at cj.studio.ecm.Assembly.start(Assembly.java:400)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:496)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:468)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:209)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:105)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.channel.ChannelHandlerAdapter.channelRead(ChannelHandlerAdapter.java:143)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:243)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:956)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:514)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:471)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:385)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:351)
		at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:116)
		at io.netty.util.internal.chmv8.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1412)
		at io.netty.util.internal.chmv8.ForkJoinTask.doExec(ForkJoinTask.java:280)
		at io.netty.util.internal.chmv8.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:877)
		at io.netty.util.internal.chmv8.ForkJoinPool.scan(ForkJoinPool.java:1706)
		at io.netty.util.internal.chmv8.ForkJoinPool.runWorker(ForkJoinPool.java:1661)
		at io.netty.util.internal.chmv8.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:126)
	Cause by:
		at cj.studio.orm.mongodb.MongoDBPlugin.load(MongoDBPlugin.java:86)
		at cj.studio.ecm.Assembly$EntryPoint.load(Assembly.java:582)
		at cj.studio.ecm.Assembly.start(Assembly.java:400)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:496)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:468)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:209)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:105)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.channel.ChannelHandlerAdapter.channelRead(ChannelHandlerAdapter.java:143)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:243)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:84)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:153)
		at io.netty.channel.PausableChannelEventExecutor.invokeChannelRead(PausableChannelEventExecutor.java:86)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:389)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:956)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:514)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:471)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:385)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:351)
		at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:116)
		at io.netty.util.internal.chmv8.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1412)
		at io.netty.util.internal.chmv8.ForkJoinTask.doExec(ForkJoinTask.java:280)
		at io.netty.util.internal.chmv8.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:877)
		at io.netty.util.internal.chmv8.ForkJoinPool.scan(ForkJoinPool.java:1706)
		at io.netty.util.internal.chmv8.ForkJoinPool.runWorker(ForkJoinPool.java:1661)
		at io.netty.util.internal.chmv8.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:126)
2019年10月09日 01:54:48  信息 : -------------网关启动完毕-------------------
2019年10月09日 01:54:48  信息: cj.studio.gateway.tools.GatewayEntrypoint - 网关成功启动
2019年10月09日 01:54:51  信息 : 已装载共享库/Users/cj/studio/cj.netos.gbera/cmdtools/gateway/lib/share
2019年10月09日 01:54:52  信息 : openports插件发现配置：
2019年10月09日 01:54:52  信息 : 		openportInterface=cj.studio.openport.client.IRequestAdapter remoteOpenportsUrl=ports://usercenter.com/uc/authentication.service token=
2019年10月09日 01:54:52  信息: cj.studio.openport.client.DefaultOpenportsServicesMonitor - Openports 初始化完成
2019年10月09日 01:54:52  信息 : 系统开放api地址是：/portsapi
2019年10月09日 01:54:52  信息 : 发现安全服务：/searcher.ports，类型：cj.netos.microapp.program.ports.GberaSearcherPorts
2019年10月09日 01:54:52  信息 : 		服务命令：getMicroAppInfo
2019年10月09日 01:54:52  信息 : 				参数：microapp java.lang.String parameter
2019年10月09日 01:54:52  信息 : 		服务命令：checkMicroAppVersions
2019年10月09日 01:54:52  信息 : 				参数：versions java.util.List content
2019年10月09日 01:54:52  信息 : 		服务命令：listMicroAppVersion
2019年10月09日 01:54:52  信息 : 				参数：appnameWithoutVersion java.lang.String parameter
2019年10月09日 01:54:52  信息 : 		服务命令：getMicroPortalInfo
2019年10月09日 01:54:52  信息 : 				参数：microportal java.lang.String parameter
2019年10月09日 14:44:08  信息 : -------------网关启动完毕-------------------
2019年10月09日 14:44:08  信息: cj.studio.gateway.tools.GatewayEntrypoint - 网关成功启动
2019年10月09日 14:44:15  信息 : 已装载共享库/Users/cj/studio/cj.netos.gbera/cmdtools/gateway/lib/share
2019年10月09日 14:44:16  信息 : openports插件发现配置：
2019年10月09日 14:44:16  信息 : 		openportInterface=cj.studio.openport.client.IRequestAdapter remoteOpenportsUrl=ports://usercenter.com/uc/authentication.service token=
2019年10月09日 14:44:16  信息: cj.studio.openport.client.DefaultOpenportsServicesMonitor - Openports 初始化完成
2019年10月09日 14:44:16  信息 : 系统开放api地址是：/portsapi
2019年10月09日 14:44:16  信息 : 发现安全服务：/searcher.ports，类型：cj.netos.microapp.program.ports.GberaSearcherPorts
2019年10月09日 14:44:16  信息 : 		服务命令：checkMicroAppVersions
2019年10月09日 14:44:16  信息 : 				参数：versions java.util.List content
2019年10月09日 14:44:16  信息 : 		服务命令：listMicroAppVersion
2019年10月09日 14:44:16  信息 : 				参数：appnameWithoutVersion java.lang.String parameter
2019年10月09日 14:44:16  信息 : 		服务命令：getMicroPortalInfo
2019年10月09日 14:44:16  信息 : 				参数：microportal java.lang.String parameter
2019年10月09日 14:44:16  信息 : 		服务命令：getMicroAppInfo
2019年10月09日 14:44:16  信息 : 				参数：microapp java.lang.String parameter
2019年10月09日 14:44:30  信息 : 网关监视失败。原因：Bad file descriptor
2019年10月09日 14:44:33  信息 : -------------网关启动完毕-------------------
2019年10月09日 14:44:33  信息: cj.studio.gateway.tools.GatewayEntrypoint - 网关成功启动
2019年10月09日 14:44:37  信息 : 已装载共享库/Users/cj/studio/cj.netos.gbera/cmdtools/gateway/lib/share
2019年10月09日 14:44:38  信息 : openports插件发现配置：
2019年10月09日 14:44:38  信息 : 		openportInterface=cj.studio.openport.client.IRequestAdapter remoteOpenportsUrl=ports://usercenter.com/uc/authentication.service token=
2019年10月09日 14:44:38  信息: cj.studio.openport.client.DefaultOpenportsServicesMonitor - Openports 初始化完成
2019年10月09日 14:44:38  信息 : 系统开放api地址是：/portsapi
2019年10月09日 14:44:38  信息 : 发现安全服务：/searcher.ports，类型：cj.netos.microapp.program.ports.GberaSearcherPorts
2019年10月09日 14:44:38  信息 : 		服务命令：checkMicroAppVersions
2019年10月09日 14:44:38  信息 : 				参数：versions java.util.List content
2019年10月09日 14:44:38  信息 : 		服务命令：listMicroAppVersion
2019年10月09日 14:44:38  信息 : 				参数：appnameWithoutVersion java.lang.String parameter
2019年10月09日 14:44:38  信息 : 		服务命令：getMicroPortalInfo
2019年10月09日 14:44:38  信息 : 				参数：microportal java.lang.String parameter
2019年10月09日 14:44:38  信息 : 		服务命令：getMicroAppInfo
2019年10月09日 14:44:38  信息 : 				参数：microapp java.lang.String parameter
2019年10月09日 15:02:50  信息 : 网关监视失败。原因：Bad file descriptor
